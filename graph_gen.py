from dotenv import load_dotenv

import openai
import os


openai.api_key = os.environ["OPENAI_KEY"]


def get_graph_from_text(text: str) -> str:
    """Get graph from string

    Parameters
    ----------
    text : str
        Description of the graph needed

    Returns
    -------
    str
        Code generated by ChatGpt
    """
    MODEL = "gpt-3.5-turbo"
    response = openai.ChatCompletion.create(
        model=MODEL,
        messages=[
            {
                "role": "system",
                "content": "You are a smart data analyst assistant which is expert in \
        data vizualisation with streamlit.",
            },
            {
                "role": "system",
                "name": "example_user",
                "content": "Can you create a graph of totals.pageviews depending of the time",
            },
            {
                "role": "system",
                "name": "example_assistant",
                "content": "# Graph creation \
                fig, ax = plt.subplots() \
                ax.plot(df['time'], df['totals.pageviews']) \
                ax.set_xlabel('time') \
                ax.set_ylabel('totals.pageviews') \
                ax.set_title('Pageviews over time') \
                # Show the chart in Streamlit \
                st.pyplot(fig)",
            },
            {
                "role": "system",
                "name": "example_user",
                "content": "Can you create a graph of totals.pageviews depending of the device.browser",
            },
            {
                "role": "system",
                "name": "example_assistant",
                "content": "browser_data = df.groupby('device.browser')['totals.pageviews'].sum().reset_index() \
         browser_data = browser_data.sort_values('totals.pageviews', ascending=False) \
                # Graph creation \
                fig, ax = plt.subplots() \
                ax.bar(browser_data['device.browser'], browser_data['totals.pageviews']) \
                ax.set_xlabel('device.browser') \
                ax.set_ylabel('totals.pageviews') \
                ax.set_title('Pageviews in function of the device.brower') \
                # Show the chart in Streamlit \
                st.pyplot(fig)",
            },
            {
                "role": "user",
                "content": text,
            },
        ],
        temperature=0.2,
    )

    res = response["choices"][0]["message"]["content"]
    content_code = res.split("```")[1]

    return content_code
